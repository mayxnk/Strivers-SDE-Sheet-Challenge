class Solution {
public:
    vector<vector<int>> ans;
    void solve(vector<int>& nums,int ind)
    {
        if(ind == nums.size())
        {
            ans.push_back(nums);
            return;
        }

        for(int i = ind;i<nums.size();i++)
        swap(nums[i],nums[ind]);
        solve(nums,ind+1);
    }
    void nextPermutation(vector<int>& nums) {
        // solve(nums,0);
        // for(int i = 0;i<ans.size();i++){
        //     if(ans[i] == nums)
        //     {
        //         if(i == ans.size()-1)
        //         nums = ans[0];
        //         else
        //         nums = ans[i+1];
        //         return; 
        //     }
        // }
        //C++ STL
        //next_permutation(nums.begin(),nums.end());
        int ind = -1,n = nums.size();
        for(int i = n-2;i>=0;i--)
        {
            if(nums[i]<nums[i+1])
            {
                ind = i;
                break;
            }
        }
        if(ind == -1)
        {
            reverse(nums.begin(),nums.end());
            return;
        }
        for(int i = n-1;i>ind;i--)
        {
            if(nums[i] > nums[ind])
            {
                swap(nums[i],nums[ind]);
                break;
            }
        }
        reverse(nums.begin()+ind+1,nums.end());
        //Time - O(n),Space - O(1)

    }
};
